<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-11-09T21:53:30+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Ticcar In-Vehicle-Inforaiment System UI Design</title><link href="http://localhost:4000/2018/09/09/project-ticcar/" rel="alternate" type="text/html" title="Ticcar In-Vehicle-Inforaiment System UI Design" /><published>2018-09-09T00:00:00+08:00</published><updated>2018-09-09T00:00:00+08:00</updated><id>http://localhost:4000/2018/09/09/project-ticcar</id><content type="html" xml:base="http://localhost:4000/2018/09/09/project-ticcar/">&lt;blockquote&gt;
  &lt;p&gt;出门问问于2017年4月达成了与大众集团的战略合作，并共同成立了专注车载智能化软件开发的合资子公司问众智能。在新公司的筹备阶段，对车载中控屏软件系统的概念设计就已经开始了。在此后一年多的时间里，设计方案在团队内部积极的讨论中个不断进化。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;设计过程中的很多讨论都围绕以主页设计为核心的整体的交互结构展开，我在讨论的过程中给出了很多设计方案。我会逐一分析每一个争论点，进而阐述关于车机的设计思路。&lt;/p&gt;

&lt;h5 id=&quot;智能推送&quot;&gt;智能推送&lt;/h5&gt;

&lt;p&gt;智能推送的概念在我还在智能手表项目的时候就已经有人提出了。概念本身无论对于手表还是车载，并无差别，都是希望 &lt;strong&gt;通过统计、数据分析的手段，在恰当的时间地点推送给用户他所需要的信息。&lt;/strong&gt; 在车载端之所以会很早的提出，是受 android auto 的界面设计启发，我们认为 android auto 的首页就是一种“智能推送的信息流”。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/car-ui/android-auto.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; android auto （图片来自 Google 官网)  &lt;/center&gt;

&lt;p&gt;下面是我们的第一个以“智能推送信息流”为核心概念的设计，也初步的认为信息流里可以有：来电、未接来电的提示，导航中信息提示，目的地推送，天气等等。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/car-ui/concept_1.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; HMI Concept 1  &lt;/center&gt;

&lt;p&gt;当时我们的项目处于概念和基础架构的讨论阶段。对“智能推送信息流”应该怎么做、包含一些什么内容、各种边界条件如何处理都没有深入的研究和讨论。团队中也没有人长期深入的体验过 android auto，所以我们也并不知道在真实的环境中 android auto 的“主页卡片”和我们想象中的“智能推送信息流”有什么区别。&lt;/p&gt;

&lt;p&gt;而我也对信息流的展现形式产生过怀疑：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;这是一个看上去需要用户去翻阅浏览的展现形式，几乎等同于手机上的通知中心，但我们的本意并不想让用户时不时的去上下划动浏览它。&lt;/li&gt;
  &lt;li&gt;就算我们最大限度的控制，并且尽可能精准的推送，仍然不能改变他带给用户的压力感，因为信息流的形式看上去很像一个待办任务列表&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;场景分析&quot;&gt;场景分析&lt;/h5&gt;

&lt;p&gt;为了判断智能推送的可行性，我们做了一些场景分析。我们按照车辆的 &lt;strong&gt;行驶状态&lt;/strong&gt; 和 &lt;strong&gt;导航状态&lt;/strong&gt; 将车内场景分成了四个象限。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/car-ui/scene-analysis.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; 场景分析 &lt;/center&gt;

&lt;p&gt;我们尝试将每个可能的推送类型放在四个象限中去验证它“是否适合在这个场景中推送给用户”，例如：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;目的地的推送&lt;/strong&gt; 不应该出现在导航过程中，因为导航中意味着已经有目的地&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;媒体内容推送&lt;/strong&gt; 不适合出现在行驶中，因为专注驾驶的时候不应该受到这类内容的干扰。尤其不能出现在第一象限（行驶中+导航中）。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;天气信息&lt;/strong&gt; 可以在任何的场景中随时更新，但是除非是严重的天气变化会影响接下来的驾驶，否则都不应该打扰用户。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然，不仅仅是不同类别的智能推送需要这样的场景分析，车机上的所有功能都适合去对应到这四个不同的场景去做不同的设计。&lt;/p&gt;

&lt;p&gt;有了这样的分析，我们才对推送有了进一步的理解。最终我们还是决定采用有“智能推送信息流”的方案。我们随后也展开了对不同推送类目的细化设计，希望通过更详细的设计，减少他的负面效应，带来真正的智能体验。&lt;/p&gt;

&lt;p&gt;我们在具体设计的时候，对每一类的推送消息，无论智能的还是非智能的，都会考虑下面几个维度：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;是否适合随时弹出提示（像手机的通知一样随时出来打断用户）适合，什么时候弹出提示？在屏幕上停留多久？不适合，以什么形式推送？&lt;/li&gt;
  &lt;li&gt;是否需要在信息流里长期保存&lt;/li&gt;
  &lt;li&gt;是否更适合在其他终端上推送&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;必须提到的是，这里所有的推送，有很多是基于用户的地理位置、使用习惯等比较隐私的数据而生成的，这需要我们对用户的隐私有足够的尊重和保护。&lt;/p&gt;

&lt;h5 id=&quot;语音助手&quot;&gt;语音助手&lt;/h5&gt;

&lt;p&gt;我在另一个概念设计中，开始尝试解决另一个问题：&lt;strong&gt;语音助手&lt;/strong&gt; 一直没能很好的在系统中得到体现，通常它只是以一个按钮的形式出现在主页上。用户通常都不知道该如何使用语音助手。“让用户去阅读帮助文档来学习如何使用”这件事恐怕很难发生在车上。所以在这个概念设计里，我希望将语音助手和智能推送结合，将语音助手说的话，直接显示在屏幕上方，其对应的界面则从信息流中突出出来。并且可以将语音助手的一些日常用法和帮助提示也展示在同样的位置。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/car-ui/concept_2.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; HMI Concept 2  &lt;/center&gt;

&lt;p&gt;但我渐渐的认识到，语音交互在目前阶段是无法替代常规交互方式的，它还有很多很多的体验问题没有解决。把这样一个更多只是噱头的功能置于这么重要的位置，对用户来讲未必是件好事。当然，人工智能一定要发展下去，但现阶段各大公司所采用的设计都有“拔苗助长”的意味，还是应该理性的对待新技术的落地。所以在我最终的方案里，不会突出语音助手的形象。&lt;/p&gt;

&lt;h5 id=&quot;地图主页&quot;&gt;地图主页&lt;/h5&gt;

&lt;p&gt;有很多新的车载软件系统，会把地图做为系统的主页，用户点火后立即就能看到地图，路况，目的地推送，搜索框。在我们概念设计的开始阶段，由于技术条件的限制，是几乎没有考虑这个方案的。但随着讨论的深入，我们发现，导航是车内场景最刚性的需求，用户不一定每次开车都会听东西，但每次开车都会有一个目的地，都有看路况的需要。更快，更方便，更直接的使用导航，是车载软件最应该提供给用户的体验。如果没有更好用更直接的地图主页，车机系统跟一个PAD几乎没有分别。所以我们最终还是确定了地图出现在主页的设计方向。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/car-ui/concept_3.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; HMI Concept 3 开始尝试有地图的主页 &lt;/center&gt;

&lt;h5 id=&quot;全局导航栏&quot;&gt;全局导航栏&lt;/h5&gt;

&lt;p&gt;在这些概念的设计过程中，我们反复的争论的另一个话题是：全局常驻的导航栏是不是必须存在？&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/car-ui/concept_4.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; HMI Concept 4 一个没有全局导航栏、不强调信息流的方案 &lt;/center&gt;

&lt;p&gt;导航栏本身的价值在于可以快速的在几个常用应用之间切换。但我们发现，如果有了这样一个导航栏，用户回到主页的概率就会大大的降低。我们希望用户可以在导航和音乐之间快速切换，但我们同时也希望智能推送流就能实现他的大部分需求。&lt;/p&gt;

&lt;p&gt;争论双方的立场是：认为要有全局导航栏的认为，全局导航栏不会影响主页的的价值，真正有价值的主页，用户是会使用的；不赞成有导航栏的则认为，如果有全局导航栏，主页就不是用户交互路径的必经之路，用户不用主页的原因就很可能就不是“主页设计的不够好”。&lt;/p&gt;

&lt;p&gt;最终我们在智能推送和地图主页两个已经确定的设计前提下，选择用常驻导航栏去补充主页满足不了的需求。&lt;/p&gt;

&lt;h5 id=&quot;最终方案&quot;&gt;最终方案&lt;/h5&gt;

&lt;p&gt;基于上述所有的结论，我们最终设计了下面的方案，已经投入开发并可以在实车上演示，但仍有很多细节没有设计完善，比如音乐播放器的交互细节，推送卡片的交互细节等等。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/car-ui/concept_f.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; HMI Concept 5 &lt;/center&gt;

&lt;h5 id=&quot;redesign&quot;&gt;Redesign&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;上一个方案里，没有一个全局的搜索栏，用户虽然可以用语音开始导航、播放音乐，但用户一定还是会有需要与屏幕交互来完成这些事情的需要。&lt;/li&gt;
  &lt;li&gt;智能推送的卡片在离驾驶位较远的位置，我不能确定这是不是一个合适的位置，但我认为本身是用来提供方便儿设计的功能，应该出现在更方便的位置。&lt;/li&gt;
  &lt;li&gt;考虑到在未来一段时间内，大屏幕仍然是车机的趋势，我在重新设计时加入了空调控制栏。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/car-ui/ticcar_concept.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; HMI Redesign &lt;/center&gt;

&lt;h4 id=&quot;一些学到的东西&quot;&gt;一些学到的东西&lt;/h4&gt;

&lt;h5 id=&quot;车上不适合做重浏览重交互&quot;&gt;车上不适合做重浏览、重交互&lt;/h5&gt;

&lt;p&gt;无论怎样，车机那块屏幕的位置，都是不太舒服的。我们用到的任何其他需要我们长时间注视和使用的屏幕，都不是那样的角度，也不会用那样的姿势。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;这块屏幕通常会固定在那里，我们必须伸手去与之交互。&lt;/li&gt;
  &lt;li&gt;我们用手机、平板、电脑、电视通常都是正对着屏幕，而车机不是。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;所以对于那些需要浏览、需要长时间视线停留、需要复杂交互的应用，如果用户需要，而我们也有条件做，我们也不应该引导用户去那这块屏幕上定机票、订酒店、叫外卖，查餐厅，玩游戏，学英语，记笔记等等，我现在找不出任何把这些东西搬到车上理由。&lt;/p&gt;

&lt;h5 id=&quot;手机永远都在&quot;&gt;手机永远都在&lt;/h5&gt;

&lt;p&gt;每当想起一个点子，想要搬到车机上的时候，一定要考虑同样的事情，是不是手机上做会方便的多。&lt;/p&gt;

&lt;p&gt;举个侧面的例子：手机解决了一个车上的一个比较大的问题，那就是乘客可以用自己的移动设备和配件满足自己独立的娱乐需求，并且不会干扰司机，这是以前的豪华车都不具备的能力。所以即便车上给副驾驶也配备一块屏幕，他可能需要的更多也是屏幕投射，因为如果你想让他用这个自己不是很熟的系统，那他必须能做到尽量无痛的习惯迁移，甚至比手机有更多好玩的东西。这也说明了，车载的软件的娱乐属性是完全可以被移动设备替代的。&lt;/p&gt;

&lt;h5 id=&quot;数据流量是个大问题&quot;&gt;数据流量是个大问题&lt;/h5&gt;

&lt;p&gt;我认识一个不去付费充音频流量的荣威RX5主，他说，他用手机很方便。对啊，我们的手机上已经几乎没有流量焦虑了，如果让用户担心车上的流量问题，肯定是无法接受的。&lt;/p&gt;

&lt;h4 id=&quot;最后&quot;&gt;最后&lt;/h4&gt;

&lt;p&gt;在我们设计的过程中，像特斯拉、荣威RX5、蔚来、车和家、拜腾等新时代的联网汽车已经或将要跑在路上了。他们的车内软件系统都是相对整体的用户体验方案，方控，大屏，液晶仪表盘协作交互。而另一方面，科技巨头，Apple 和 Google 也都推出了可以和自己手机系统连通的车载系统解决方案。这两种车载软件系统产品方向都在不断向前发展。&lt;/p&gt;

&lt;p&gt;我觉得手机不是车机的竞争对手，手机更像是一个参考标准，如果车机的体验做的比手机差，真的没有理由做下去。车机不是为了打败手机而存在，但任何一个产品都不会想做出来只是个摆设，这可能是车机面对的最无奈的矛盾。如果想让用户用车机系统而不是用架在手机架上的手机，那就必须需要有更简单顺畅交互，更懂用户，更智能。&lt;/p&gt;</content><author><name></name></author><summary type="html">设计过程中的很多讨论都围绕以主页设计为核心的整体的交互结构展开，我在讨论的过程中给出了很多设计方案。我会逐一分析每一个争论点，进而阐述关于车机的设计思路。</summary></entry><entry><title type="html">Ticmirror UI Design &amp;amp; Redesign</title><link href="http://localhost:4000/2018/09/08/project-ticmirror/" rel="alternate" type="text/html" title="Ticmirror UI Design &amp; Redesign" /><published>2018-09-08T00:00:00+08:00</published><updated>2018-09-08T00:00:00+08:00</updated><id>http://localhost:4000/2018/09/08/project-ticmirror</id><content type="html" xml:base="http://localhost:4000/2018/09/08/project-ticmirror/">&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/banner/banner-ticmirror.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ticmirror 是一款智能后视镜产品，内嵌出门问问自研的基于 Android 的 Ticauto 系统和语音交互技术。内置高德地图，网易云音乐，喜马拉雅，考拉FM等满足车内场景核心需求的应用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;“开车”一直被认为是语音技术落地的绝佳场景，以语音技术为根基的出门问问希望通过这款产品，进入汽车市场。2016年9月，我加入了刚刚开始的 Ticmirror 项目，负责用户体验设计。2017年4月，出门问问凭借这款产品，达成了与大众集团的战略合作，并共同成立了专注车载智能化软件开发的合资子公司问众智能。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;车载软件体验现状&quot;&gt;车载软件体验现状&lt;/h4&gt;

&lt;p&gt;一直以来，车载软件的体验都不让人满意。现在正在路上跑着的车，情况大致是这样的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;导航方面：软件体验差，更新慢，更新不方便。&lt;/li&gt;
  &lt;li&gt;音频娱乐方面：只能听听广播。听音乐需要用U盘，也没法经常更新。移动互联网时代，大家早就不用考歌听了。&lt;/li&gt;
  &lt;li&gt;大部分人通过USB和蓝牙连手机，使用手机的导航和音频娱乐，仅使用扬声器。&lt;/li&gt;
  &lt;li&gt;不能联网&lt;/li&gt;
  &lt;li&gt;车上即便有语音功能几乎被遗忘。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/mirror-ui/phone-in-car.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt;大部分人都会在车上装一个手机支架&lt;/center&gt;

&lt;p&gt;过去的差体验，留给了汽车行业很大的改善空间，在移动互联网的反推之下，近几年也诞生了像斑马、Tesla这样比较优秀的联网智能车载软件系统。而早在这些新车诞生之前，手机早已悄无声息的迅速占领了车内的软件使用习惯，这让很多提供后装娱乐系统的产品渐渐失去了机会。手机太好用，让人找不到理由加装什么额外的娱乐系统在车上。&lt;/p&gt;

&lt;p&gt;另一方面，随着 Apple Carplay 和 Android Auto 的发展，手机操作系统已经开始向车载前装渗透，很多大车厂已经开始拥抱这些好的体验。作为用户，我相信这应该是一种趋势。因为理论上好的体验是，无论在什么终端上，用户常用的服务应该是无障碍互联互通的，而在目前的技术条件下，手机是实现这一体验的唯一枢纽。汽车的联网智能化的时代早就到来了，只不过将它带来的是智能手机，而不是车载软件的智能化。&lt;/p&gt;

&lt;h4 id=&quot;智能后视镜的一丝机会&quot;&gt;智能后视镜的一丝机会&lt;/h4&gt;

&lt;p&gt;在中国，几乎每辆车都要装行车记录仪。不知道是法规的规定，还是市场的默契，还是出于设计的考虑，时至今日，绝大多数的车在出厂时是不装配行车记录仪的。网络上也没有对这个问题有特别合理的解释。总体成本，售后维护成本，法律法规缺失，都是可能的原因。这给了很多有技术实力并渴望进入车载软件开发领域的公司一丝机会。后视镜形态的行车记录仪产品，是市场上比较流行的一个品类，而 Ticmirror 就是在此基础上，集成了智能联网系统和语音交互技术。&lt;/p&gt;

&lt;p&gt;这个形态的优点是：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;可以“私带”更强大的软件系统和更大的屏幕，也就给软件体验提供了无限空间。&lt;/li&gt;
  &lt;li&gt;替换掉原来的后视镜，有机会去掉车内额外的布线，也让车内没有额外的挂窗设备，干净整洁，治疗强迫症。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点也很明显：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;会牺牲掉一部分后视范围和清晰度，安全性有所降低；&lt;/li&gt;
  &lt;li&gt;后视镜的位置不太适合触屏交互，手臂要抬起；&lt;/li&gt;
  &lt;li&gt;如果想要车内完全没有多余走线和多余的挂窗设备，需要专业的安装，可能会牺牲掉原车后视镜的功能；&lt;/li&gt;
  &lt;li&gt;除了行车记录功能外，其他体验都跟手机重合度较高。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;整体交互结构&quot;&gt;整体交互结构&lt;/h4&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/mirror-ui/ticmirror-ui-1.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt;Ticmirror UI Overall&lt;/center&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;横向卡片式的应用列表&lt;/strong&gt;。在车上更需要快速和精准的点击，卡片对应的可点击区域很大，更好点，而横向的排列跟后视镜屏幕的自然方向完美贴合。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;导航信息常驻区域&lt;/strong&gt;。无论用户在干什么，希望他能一直能关注到导航、地理位置相关的信息。早期版本，非导航状态，这里会显示一个指南针。而在之后的一次迭代中，改为非导航状态展示：时间、天气、位置。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;常驻按钮：返回，语音唤醒，全局音乐控制器&lt;/strong&gt;。硬件上有3个无图标的物理按键，对应：语音唤醒，主页，静音。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;快捷方式&lt;/strong&gt;。把对应用的更高频的需求，降低层级，放在主页。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;微光模式&lt;/strong&gt;。为了尽可能的还原后视的功能，又能给用户提供一定的信息提示，我们加入了微光模式。会用屏幕上一小块区域展示导航信息、正在播放、时间日期。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;重新设计&quot;&gt;重新设计&lt;/h4&gt;

&lt;p&gt;上面提到的交互结构，已经是相对较旧的设计。但由于种种原因，从产品发布至今，一直没有任何更新和迭代。我一直都很不理解，无论是手表，还是车镜，都不能算“成功”的产品，但整体的交互结构却一直都不去做优化，就好像存在什么特殊的能力，“已经”让产品成功了一样。虽然不能说产品是否成功跟这件事有直接的关系，但可以肯定的是，不去优化一定不会带来更好的结果。&lt;/p&gt;

&lt;p&gt;而我在项目期间一直有在记录和归纳问题，思考、整理了一些设计原则，并且也尝试依据这些原则做了改进的方案。&lt;/p&gt;

&lt;h5 id=&quot;设计原则轻浏览轻交互去应用化&quot;&gt;设计原则：轻浏览，轻交互，去应用化&lt;/h5&gt;

&lt;p&gt;人们上了车之后的需求并没有在手机和电脑上那么发散、复杂、种类繁多，坐上车了，通常是已经知道自己要去哪里了。当然不排除那些说走就走的旅行，但即便说走就走，用户的大部分车上的时间，也是在开车中度过。&lt;/p&gt;

&lt;p&gt;不应该引导用户使用车载软件系统去干一些原本在手机上非常顺畅的事情，比如：叫外卖，订酒店，订机票，购物，玩游戏，查股票，学习，读书，记笔记等等这些需要重度交互，重度浏览的事情。因为无论是中控屏，还是后视镜，都是不可移动、距离用户的位置较远的屏幕。操作姿态、屏幕的距离，都决定了他们不适合让人与之进行过长时间的操作。而由于语音交互的局限性，用户也很难通过语音完成复杂的交互。&lt;strong&gt;所以，与很多手机应用的设计目标相反的是，在车上，用户在车载软件上完成一个任务时间应该尽量的短，交互步骤应该尽量的少，无论用户是否正在开车。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;也正是因为车内环境有很多相对明确的需求，所以在做车内用户体验设计时，可以相对容易的挖掘出一些比较精准的“快捷方式”，让体验变得更直接和简单。在Ticmirror的设计里，在应用的卡片下方给出了一些更具体的快捷方式。这是一个值得去继续深入的方向，我暂时称之为——去应用化。我们在主页设计的常用功能的快捷方式，就符合这一原则，用户单次点击就可以完成一个完整的需求。另外，语音交互，也是符合“去应用化”这一原则的，用户只要说”回家“，系统就可以直接开启导航软件、查询路线、展示回家的路况，而不需要用户手动通过触屏点击若干次。&lt;/p&gt;

&lt;p&gt;在手机上，以应用为主要的交互入口，所有的体验，都从进入一个应用开始。车载软件系统，呈现给用户的，更多的时候应该是一个“大应用程序”的形态，可以更直接的满足用户的需求。&lt;/p&gt;

&lt;h5 id=&quot;横向的卡片式应用列表的问题&quot;&gt;横向的卡片式应用列表的问题&lt;/h5&gt;

&lt;p&gt;这个布局还是形式感强于实际体验的一种设计。局限性很明显：如果随着产品迭代，应用逐渐变多，单排卡片式的效率太低了。用户可能会经历较长时间的翻阅和查找，用起来不够方便。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/mirror-ui/app-list-comparison.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt;两种应用列表的对比&lt;/center&gt;

&lt;p&gt;解决方案：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;单排卡片式的应用列表，改为双排传统式应用列表。&lt;/li&gt;
  &lt;li&gt;结合上面提到的去应用化的观点，应用的列表不再作为车载软件系统的主页，把应用放置于一个统一的入口之中，降低一个层级。而原本的主页卡片，可以更专注于更有价值的信息的展示。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;导航信息常驻区域的问题&quot;&gt;导航信息常驻区域的问题&lt;/h5&gt;

&lt;p&gt;导航信息常驻区域的设计初衷是：&lt;strong&gt;用户在开车时，并且在导航中，同时又要和镜子进行触屏交互，怕用户在这个时候错过导航信息。&lt;/strong&gt; 不难发现，这个设计所描述的真实场景是多么的危险。我们提供的解决方案实际上是在让用户 &lt;strong&gt;一心三用 ：开车、触屏交互、关注导航。&lt;/strong&gt; 有趣的是，我在官方的宣传照片里，找到了这下面这张图。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/mirror-ui/nav-card-bad-case.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt;实际场景中的一心三用&lt;/center&gt;

&lt;p&gt;我相信当初之所以有这么一张照片，就是为了体现导航常驻区域的价值。但这个场景图真的是越看越觉得危险，前方车辆打起了转向灯准备并线，模特的视线是在屏幕右侧的音乐应用上。如果这个时候模特是在行驶中，他一定比不在操作镜子的时候，更容易忽略掉前方车辆的状态。&lt;/p&gt;

&lt;p&gt;错过路口的原因，简单分析大致有三种：注意力的不集中、被动注意力转移、主动的注意力转移。
开车注意力不集中，不能很认真关注导航的提示，可能需要驾驶环节和导航软件去做优化，当然也可能是驾驶者疲劳等自身原因。
注意力被动转移，就看干扰原是什么，应该解决这个干扰源的问题。
而如果是主动的转移，就像这个图里所描述的场景，这时旁边的导航信息真的还会起到提示作用吗？&lt;/p&gt;

&lt;p&gt;这样一个初衷，却引入了不太理想的结果，这让我开始思考整体界面的结构问题，同时也引起了我对 &lt;strong&gt;设计原则&lt;/strong&gt; 的反思：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;能干扰用户，并让用户产生多任务交互需求的事情，都是由我们来设计的。我们应该尽可能的去避免，而不是为这样的情况提供方便。&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;如果有必须让用户处理的事情，应该让他以最快速度处理完，这期间的一切其他信息都是干扰。当然，这个“必须”，应该非常严格的控制。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;除了上面提到的在真实场景中的问题，这个导航信息的常驻区域还带来了一些其他使用体验上的问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;导航信息常驻区域，位于应用程序区域和最左边的常驻按钮栏之间，但却跟左右两侧都没有任何信息和交互上的关联，用户的视线需要经常在左右两边“跳跃”，带来不舒服的交互体验。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;由于这个卡片的存在，属于应用的区域会存在两种宽度。在导航软件打开的状态，由于导航软件本身有相同的信息展示，两个一起显示会重复，所以此时就需要将常驻区域去掉，导航软件会充满常驻按钮左侧的全部区域。所以这个常驻也是存在“特例”的，因为这样的设计导致通知界面、语音界面、输入法界面、系统弹窗等等很多界面都需要适配两种宽度。而在用户使用时，也会因此看到一些不顺畅的界面过渡。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/mirror-ui/nav-card-two-width.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt;两种应用程序的宽度&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;在一次迭代中，导航信息常驻区域在非导航状态会显示日期时间、天气、地理位置。一个卡片有两个完全无关的状态，并且是互斥关系，这样就给用户带来了新的困惑：为什么导航中就看不到日期和天气这样的信息了呢?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/mirror-ui/nav-card-mutex.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt;常驻导航区域互斥关系的两个状态&lt;/center&gt;

&lt;h5 id=&quot;屏幕常驻按钮和物理按键的问题&quot;&gt;屏幕常驻按钮和物理按键的问题&lt;/h5&gt;

&lt;p&gt;这几个按键如何配置，是团队内部争论了很久的话题。我们曾经把所有可能的选项都列在了会议室的墙上，大家一起逐一对比，但最终大家不得不向目前这个方案妥协。这导致用户可能会时不时的去点击屏幕左上角的返回，时不时的去按物理按键的主页；在有语音唤醒词的情况下，语音唤醒又同时占用了一个屏幕按键和一个物理按键，这不仅占用了本来就很紧张的可交互资源，也给用户多了一个不必要的选择；而对声音的控制，只有最远端物理键的静音按钮。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/mirror-ui/buttons.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt;Ticmirror 的按钮设计&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;之所以语音按钮这么重要，是想尽可能的引导用户使用，而在现实的车内场景中，用户已经伸出手使用触屏交互了，为什么还要引导用户切换为语音交互呢？这样的交互是给用户制造麻烦，降低效率。&lt;/li&gt;
  &lt;li&gt;车载环境的音量调节是很重要的，重要到方向盘控制上都会有音量加减按键。因为无论是放歌还是导航，都非常需要更直接的调节音量。而Ticmirror并没有很直接的调整音量的方式，最快的是从屏幕右边的状态栏向左划将快捷设置界面划出。而物理按键则只能静音/取消静音。&lt;/li&gt;
  &lt;li&gt;考虑的更远一点，假如系统可以被植入到一个没有物理键的硬件上，按照目前的设计，是没有办法返回主页的。&lt;/li&gt;
  &lt;li&gt;这里反映了硬件外观设计和软件体验设计之间是缺乏沟通的，交互设计相关的部分应该是双方共同完成的。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我认为物理键应该全部用来调整音量，三个物理按键分别是是音量减，音量加，静音；屏幕上的三个按键，应该是返回，home，应用列表。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/mirror-ui/buttons-redesign.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt;Ticmirror 常驻按键 Redesign&lt;/center&gt;

&lt;h5 id=&quot;redesign&quot;&gt;Redesign&lt;/h5&gt;

&lt;p&gt;离开项目其实有一段时间了，但我一直觉得之前设计上的问题，应该有一个更好的方案去解决。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-4&quot; src=&quot;/img/article/mirror-ui/ticmirror-ui-redesign.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;重新设计了整体的界面布局。右侧会有一个常驻的信息区域，无论系统处于什么状态，这个位置展示的信息始终不变。正在播放的媒体信息也会在常驻信息区域展示。&lt;/li&gt;
  &lt;li&gt;主页不再是横向排列的应用卡片，改为对用户更有价值的地图导航、目的地推荐、行车记录小窗和拍照按键。&lt;/li&gt;
  &lt;li&gt;应用列表变从界面左下方的入口进入。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;对比其他设备&quot;&gt;对比其他设备&lt;/h4&gt;

&lt;h5 id=&quot;对比智能手表&quot;&gt;对比智能手表&lt;/h5&gt;

&lt;p&gt;看起来完全不相关的两类产品，有很多共同之处&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;它们都无法成为主力终端，人们不会不带手机上车，大多数情况也不会只戴手表不带手机。在移动互联网时代，他们都无法取代手机，但他们跟手机相互配合都能带来很好的体验。&lt;/li&gt;
  &lt;li&gt;它们都是应该尽量不动手去交互的设备：手表屏幕小，侧重信息的快速获取，不应该有太多触屏交互；在驾车环境中，也应该尽量让手不离开方向盘。&lt;/li&gt;
  &lt;li&gt;后视镜的位置跟手表有相似之处，都是一个适合“一瞥即知”的位置，不适合长期注目和交互。&lt;/li&gt;
  &lt;li&gt;他们都是很适合语音交互的产品形态。但比起手表，驾车场景更适合语音交互，因为握着方向盘直接说话，要比抬起手腕来对手表讲话自然的多。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;对比手机&quot;&gt;对比手机&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;我很难找到一个理由让我使用 Ticmirror 上的导航，虽然语音快速开始导航的体验很棒，但是大部分主流手机也都支持这个功能。毕竟屏幕位置和形状都很非常规。更何况手机上有我全部的使用记录和习惯，也有更完备的功能和更好的性能。&lt;/li&gt;
  &lt;li&gt;我也很难找到理由用 Ticmirror 上的音乐和听书软件，因为我常听的都在我的手机上，上车后，手机会自动连上蓝牙，我可以很快的用手机播放我最想听的。就算我耐心的重新登录了所有账号，但流量、软件体验等等问题还是会让我重新回到手机。&lt;/li&gt;
  &lt;li&gt;尽管 Ticmirror 可以实现很不错的语音交互体验，而且也花了很多精力接入了主流内容供应商和服务提供商，但后台服务的反馈并不能提供更全面的信息，也无法形成体验闭环。跟在手机上快速准确的点两下比，无论哪家的语音助手，都有唤不醒、误唤醒、听不懂等等的问题，现在的语音交互技术远远没有到能作为核心交互方式的程度。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然，这些问题不是 Ticmirror 一款产品的问题，所有的车载软件系统，包括最新的中控娱乐系统在内，都会面临同样的问题。各大车厂，无论新的老的，都会推出自己的全新的软件系统；而手机在可以预料的很长一段时间，都会影响用户对车载系统的使用，影响车内的用户体验设计。&lt;/p&gt;

&lt;h4 id=&quot;关于车和手机我的一些疑问&quot;&gt;关于车和手机，我的一些疑问&lt;/h4&gt;

&lt;p&gt;一直觉得车载软件系统跟手机之间有着很微妙的关系。我还没长期体验过一款“联网”汽车，对我而言，换车的动力也不是十分充足，如果我没有车，现在我刚好有钱去买辆车，我可能还是会先从价位、品牌去缩小自己的范围，我不知道真正能进入我的购车范围的会不会是一辆联网汽车。因为我有太多的疑问没有得到解答。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;人带着手机上车，跟车本身联网，差别究竟在哪里？我认为车联网应该解决自动驾驶的问题，所以非智能驾驶相关的车联“网”，其实跟人带着手机上车没有本质区别。是这样吗？&lt;/li&gt;
  &lt;li&gt;车机、手机会有很多功能重叠，他们是竞争关系吗？用户在车上的时间并不算长，大部分时间还在专注开车，车载软件系统为什么还要投入精力开发跟手机重叠的功能去跟手机“争抢”用户，争夺用户这部分时间的最终目标是什么呢？&lt;/li&gt;
  &lt;li&gt;特斯拉的软件系统的关键还是联网免费，做不到这一点，很多“联网”功能就等于没做，至少我是认识根本不用车载音乐软件的荣威RX5车主。我花钱买车，还要花钱买车上的流量，这种方式明显不适用与大部分厂商和用户，那他们要如何设计“联网”体验呢？难道不应该拥抱手机？&lt;/li&gt;
  &lt;li&gt;是否联网在目前/在未来会是决定用户选车的一个理由吗？一个想要的都有，性价比品牌都理想，可以很好的和手机互联，但就是不带sim卡的车，用户会因此就不买了吗？相同配置，有sim卡，但品牌价位都不理想，用户会因此购买这辆车吗？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我会带着这些问题继续前行。&lt;/p&gt;</content><author><name></name></author><summary type="html">整理 Ticmirror 的设计思路的时候，看到了之前自己记录的很多设计上的问题。回想我曾经还带着这些问题在公司内部分享会上尬聊，实在无法面对。重新思考后，我尝试去解决这些问题。</summary></entry><entry><title type="html">画图之外，设计之内</title><link href="http://localhost:4000/2018/01/08/about-design/" rel="alternate" type="text/html" title="画图之外，设计之内" /><published>2018-01-08T00:00:00+08:00</published><updated>2018-01-08T00:00:00+08:00</updated><id>http://localhost:4000/2018/01/08/about-design</id><content type="html" xml:base="http://localhost:4000/2018/01/08/about-design/">&lt;p&gt;在2015年，智能手表还是个非常新的品类，项目组成员都没有过开发智能手表的经历。设计和开发的过程中，大家都在不断的学习和探讨，组内没有绝对的权威，也就给了大家更充足的个人发展空间。这让原本就不满足视觉设计的我，能在这段时间里更多的参与产品设计、交互设计。对我而言，在Ticwear这段时间是我的专业能力和对产品的理解提升最快的一段时间。&lt;/p&gt;

&lt;p&gt;出于对产品的兴趣，我会经常反思现有产品存在的问题，思考并寻求新的解决方案，方案比较成熟的时候，我会主动找产品经理沟通。我始终相信，产品经理会乐于跟这样的设计师合作，因为这样的合作伙伴是一直在思考产品设计的，不是被动的接收需求，而是能保持跟他们站在一样的视角和高度去设计产品。&lt;/p&gt;

&lt;p&gt;我会经常用在线工具记录自己的这些思考和理解，记录产品迭代思路。长期保持这样的习惯，会让自己的头脑始终保持高度的敏感的状态，也同时会积累形成一个很丰富的产品设计的知识库。这样无论对个人，还是对团队，都有很大帮助。&lt;/p&gt;

&lt;p&gt;我觉得做好设计，这些画图之外的事情更重要。&lt;/p&gt;

&lt;h5 id=&quot;重新理解设计规范&quot;&gt;重新理解设计规范&lt;/h5&gt;

&lt;p&gt;在 Ticwear 项目期间，对我来说最大的收获，是在设计工作中重新理解了设计规范。&lt;/p&gt;

&lt;p&gt;在之前的工作中，由于“规范”这个词的误导，我总会认为，设计规范就是定好了不许改的东西。在 Ticwear 项目期间，我设计思路上的第一个转变是：规范就是设计本身。进一步说，是“团队设计”。它不是那个不能变的东西，而是那个整个团队需要一起遵循的东西，需要团队一起去维护，不是束缚大家的枷锁，而是共同创造美好设计的基础。这部分工作很难一气呵成，更多的是跟周围的同事紧密的合作。例如在设计中用到的字号、颜色、间距这些很容易规范化的东西，大家需都需要建立意识，在自己用到的时候要经常跟大家讨论和同步。逐步形成统一的设计规范库，并用在线的工具记录。&lt;/p&gt;

&lt;p&gt;我的第二个转变是：规范不能只在设计师端维护。规范如果只维护在设计师端，最后只能变成设计师们自嗨的工具，不会为产品带来价值。在实际开发中，也会跟工程师之间发生很多不必要的沟通。解决办法是：必须把设计规范在工程师端落地，形成代码库，例如：规范里的一个交互控件，在工程师端应该是由负责开发控件的工程师开发成可以调用的通用控件，而不是每次都要重新开发。这样不仅实际产出会更标准化效率更高，所有相关的同事也都会对设计规范有共同的认识。&lt;/p&gt;

&lt;p&gt;基于上面的理解，跟我的同事们一起，共同创建了 &lt;strong&gt;&lt;em&gt;Ticdesign&lt;/em&gt;&lt;/strong&gt; 设计规范和代码库，您可以点此 &lt;a href=&quot;http://ticdesign.chumenwenwen.com/design/&quot;&gt;&lt;strong&gt;&lt;em&gt;点此&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; 进入Ticdesign网站做进一步了解。&lt;/p&gt;

&lt;h5 id=&quot;拒绝快餐式设计&quot;&gt;拒绝快餐式设计&lt;/h5&gt;

&lt;p&gt;产品设计过程中，会时常碰到用一个很临时的快速方案处理用户反馈事件的现象，往往这样的处理办法不会解决根本问题。创业团队，很想快速对用户的反馈做出响应，很怕错过些什么，就会经常用这种方式处理问题，我给这种现象取了个名字——“快餐式设计”，这样的问题多了，会积累很多根深蒂固却又谁都不敢碰，不愿意去碰的问题，会把最本质的问题藏的越来越深。在 Ticwear 的开过程中，多次遇到这样的问题，有一些在我和一些同事的坚持下得到了解决，有的则石沉大海。&lt;/p&gt;

&lt;p&gt;下面是一个例子。&lt;/p&gt;

&lt;p&gt;有段时间，用户反馈：他们的手表屏幕经常被误触发点亮。有产品经理准备用这样的解决方案：在设置项里，增加一个触摸亮屏的开关，开，触摸亮屏，关，完全不响应触摸事件。看起来非常聪明的设计，只要告诉这个用户，我们给你加了这个开关，这个用户就会很开心。实际上是这样吗？这种办法解决了根本问题吗？并没有。&lt;/p&gt;

&lt;p&gt;先说加开关这个方案，这只会解决“发生了误触发现象，且通过反馈渠道向我们反馈过问题，并且得到我们回复”的用户的问题。大量的用户，是不会向我们反馈这种问题的，这些用户怎么会知道系统设置项里增加了这个开关呢？就算无意中发现了这个开关，他怎么会知道这个开关会解决误触发的问题呢？要为这个功能发送集体通知推送吗？要把他写进更新日志中吗？开关开着，就不会误触发了吗？触摸亮屏这个体验本身有问题吗？&lt;/p&gt;

&lt;p&gt;所以这种加开关的快餐式设计方案完全不解决根本问题。&lt;/p&gt;

&lt;p&gt;而实际上不难理解，误触发一定是系统对于屏幕触摸的响应处理的不够好。我们经过分析和测试后发现，当时屏幕在熄灭的状态，对长按和划动都会做出响应，在进一步了解，我们发现屏幕其实对所有的touch down事件都会做出响应，而用户反馈的问题，很多也是由一些能产生划动和长按的肢体动作造的。所以问题的本质是屏幕对touch的响应机制上的设计遗漏，之前并没有对此做出严谨的定义。应该用类似如下的方案去解决这个问题：首先应该调整为，屏幕熄灭状态，取消长按和滑动的响应，在开发和测试后看实际的效果再做下一步调整。&lt;/p&gt;

&lt;p&gt;如果用了开关方案，这个问题将会被永久遗忘，团队也就失去了做出卓越产品的机会。我认为，无论怎样都一定要坚持去找到问题的根源，不要只看表面，如果能修一座桥，就不要准备一根竹竿，这是做出好设计的基础。&lt;/p&gt;

&lt;h5 id=&quot;设计原则必须存在&quot;&gt;设计原则必须存在&lt;/h5&gt;

&lt;p&gt;很多时候，我们是打开工具软件就开始做设计的。虽然团队内部会有一定的讨论，但通常都是直奔主题，快速进入细节。用这样的方式做设计，产品会在很长一段时间里都缺乏个性，没有灵魂，有时候甚至会不知道为什么要设计成这样。设计原则的存在，就会解决这个问题。&lt;/p&gt;

&lt;p&gt;例如，如果智能手表产品的设计原则中，有一点是：&lt;strong&gt;尽可能让用户一瞥即知&lt;/strong&gt;，那我的信息展示为主的界面就会围绕这一原则去设计，对布局，字号，信息密度都会有要求。而如果没有这一原则的存在，可能就会出现字号较小，信息密度过大的设计。或者，如果设计原则中，有一点是：&lt;strong&gt;让用户尽量少用另一只手，保证真正的解放双手&lt;/strong&gt;，那在有可能增加存在复杂交互的功能时候，就会认真去思考是不是真的要做这样一个功能了。&lt;/p&gt;

&lt;p&gt;当然，设计原则一定不是在产品设计开始之前就能想清楚、弄明白的，需要一定的经验积累，需要团队每位成员对产品的理解能不断的保持同步。但无论怎样，设计原则是必须存在的，否则产品将失去灵魂。&lt;/p&gt;

&lt;h5 id=&quot;好想法如何成为好产品&quot;&gt;好想法如何成为好产品&lt;/h5&gt;

&lt;p&gt;有时候，团队里会有一些比较好的想法，但由于种种原因没有被采纳。当其他的竞争对手先把你这些想法做出来的时候，没有人是真心的想说“哎，我不是都说过了”，，因为大家都宁愿不要说这种话，因为那时更多的是内心的无限遗憾。这让我不得不去思考这其中的原因，到底哪里出了问题？&lt;/p&gt;

&lt;p&gt;对于这个问题的思考，让我想到了最近听到的一段历史，一战后的1919年，在决定人类命运的巴黎和会期间，是有一些人预言了二十年之后的第二次世界大战的发生的，也在会上表达了自己的态度。可为什么最终悲剧还是发生了？把问题放大到如此之大的历史的角度，有点夸张了，但我试着找到其中清晰的道理：1. 二十年之后的二战是个悲剧；2. 悲剧有机会避免。3. 应该从历史中学会如何避免悲剧的发生。&lt;/p&gt;

&lt;p&gt;我觉得最主要的原因，是这些好想法的提出者，没有把好的想法做深入和完整阐述、设计、甚至是demo。如果真的觉得这是个好设计，一定要做的完整的设计，不要只是说说，要更正式和完整的去阐述观点。最重要的是，一定要为这个设计找到让人难以拒绝的理由，如果找不到这样一个理由，也就证明这个想法是有问题的。当然，这期间还要注意沟通的技巧。就像当年的那些“预言家”，如果觉得未来真的那么可怕，他们应该找到更合适的方式尽全力阻止悲剧发生。&lt;/p&gt;

&lt;p&gt;另一个重要的原因，我认为是在决策者本身的综合能力。专业能力，学习能力，沟通能力，领导能力，判断能力所有这些能力共同决定了产品最终的发展方向，过程真的很复杂，但结果会体现一切。&lt;/p&gt;

&lt;p&gt;我很想知道像苹果这样的公司是如何决策的。数据？满意度？专家评审？个人决定？民主决定？我没有答案。我看到的经历过的过程，并非是很多利益的权衡，并非是力排众议力挽狂澜，更多的是混乱。我会继续去寻找答案。&lt;/p&gt;</content><author><name></name></author><summary type="html">一些关于产品设计的思考和理解</summary></entry><entry><title type="html">Ticwear UI Design</title><link href="http://localhost:4000/2018/01/06/project-ticwear/" rel="alternate" type="text/html" title="Ticwear UI Design" /><published>2018-01-06T00:00:00+08:00</published><updated>2018-01-06T00:00:00+08:00</updated><id>http://localhost:4000/2018/01/06/project-ticwear</id><content type="html" xml:base="http://localhost:4000/2018/01/06/project-ticwear/">&lt;p&gt;&lt;img class=&quot;img-fluid my-4&quot; src=&quot;/img/article/watch-ui/watch-ui-1.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ticwatch 是由出门问问研发的一款智能手表。搭载出门问问自主研发的语音和智能服务，内置自主研发的应用和精美的表盘。用户也可以从应用商店和表盘商店获取更丰富的应用和表盘。前几代产品搭载自主研发的基于 Android 的 &lt;strong&gt;Ticwear&lt;/strong&gt; 系统。最新一代的产品采用 Google 的 Wear OS 系统。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;在2015年9月我加入了出门问问，并在接下来的一年时间里，负责 Ticwear 的用户体验设计。能够参与一个前沿科技产品的体验设计，至今我都觉得非常的开心和幸运。有机会看到自己的设计不断的出现在一款自己喜爱的硬件产品上，这种感觉非常美妙，特别是当自己设计的图标、界面出现在发布会的大屏幕上，对我这样一个从纯工科转行来做设计的人来说，实在是莫大的鼓励。感谢出门问问的每一个小伙伴。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我在这里分享一些 Ticwear 最重要的一次版本更新——4.0 版本时我做过的一些设计方案、设计思路和对产品开发的理解。&lt;/p&gt;

&lt;h4 id=&quot;从表盘开始&quot;&gt;从表盘开始&lt;/h4&gt;

&lt;p&gt;智能手表的表盘界面是用户最常看到的界面，日常的体验大部分都从表盘开始。随着表盘设计的不断进步，表盘已经不仅仅用来看时间，还承载越来越丰富的信息和功能，逐渐变成智能手表最重要的界面。过去，一支传统手表只对应一个固定的表盘，而在智能手表上，人们能体验到无限多的表盘。&lt;/p&gt;

&lt;p&gt;Ticwear 4.0 版本之前的表盘设计，突出了创意和个性化的特点，整体比较简洁，也有一些很有趣的设计。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-old-watch-face.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt;Ticwear 3.0的内置表盘&lt;/center&gt;

&lt;p&gt;经过一段时间的经验积累，我总结了几个表盘设计的关键点：&lt;/p&gt;

&lt;h5 id=&quot;在表盘上展示更多日常信息&quot;&gt;在表盘上展示更多日常信息&lt;/h5&gt;

&lt;p&gt;如果有些原本很喜欢的表盘上，却没有我经常关注的信息，会很让人失望。所以我们在设计新表盘时，尽可能多的展示除时间日期之外的日常信息。我们认为星期、天气、温度，手表电量，步数是除了日期之外一定要在展示在表盘上的，其他例如：PM2.5，心率，手机电量，日程提醒，应用入口等的则可根据表盘的主题做选择的展示。&lt;/p&gt;

&lt;p&gt;遗憾的是，实际上，即便我们在设计表盘时尽可能多的融入了上面提到的信息，还是会有很多用户的需求无法覆盖到。虽然比以前稍有进步，但这依然不是一个科学的、聪明的方案。&lt;/p&gt;

&lt;p&gt;这里不得不提到 Apple Watch 表盘上的 Complication (复杂功能) 的设计。Apple watch 的表盘，大部分（也可能是全部）都可以用户自定义。自定义的价值，不在于视觉样式上的自定义，而是那些可以展示在表盘上的 Complication 自定义。这个是 Ticwear 没有去尝试的，也就意味着在 Ticwear 上，如果一个表盘在设计的时候，就没考虑天气的展示，那用户还是没机会在一个自己喜欢的表盘上一眼就看到天气。Apple Watch 也让常用的应用程序可以变成一个快捷的入口，从表盘就可以直接进入。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;https://developer.apple.com/library/archive/documentation/General/Conceptual/WatchKitProgrammingGuide/Art/complication_styles_2x.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Apple Watch OS —— Complication (复杂功能) 图片来自 Apple 官网&lt;/center&gt;

&lt;p&gt;由 Complication，可以引出另一个产品设计问题：Apple watch 还提供很多其他跟时间相关的功能，比如：世界时间，日出日落，月相等。而 ticwatch 上没有这些信息和应用的提供。我觉得作为一个智能手表，是可以想办法尽可能满足用户更多的关于&lt;strong&gt;时间&lt;/strong&gt;的需求的。&lt;/p&gt;

&lt;h5 id=&quot;让表盘更精致&quot;&gt;让表盘更精致&lt;/h5&gt;

&lt;p&gt;智能手表虽然有一块什么都能显示的屏幕，但手表仍然是个饰品，表盘和外观更多时候应该看上去是一个整体。4.0之前的表盘设计相对来说是独立于外观的。从4.0版本开始，表盘设计更多的考虑与外观的搭配，我们开始尝试并陆续设计出了更多拟物风格、传统风格的表盘，可以用来搭配不同的表体和表带。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-my-watch-face.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; 我设计的几款表盘 &lt;/center&gt;

&lt;h5 id=&quot;功能化表盘抬刻表盘&quot;&gt;功能化表盘：抬刻表盘&lt;/h5&gt;

&lt;p&gt;除了视觉上的丰富变化，表盘还可以在功能上更加丰富，例如，运动表盘，天气表盘，世界时间表盘等等。设计团队内部发起过一些产品创意项目，抬刻表盘是其中由我主导设计的一个最有可能实际开发的一个，也是一个功能化表盘。虽然后来没有正式立项开发，但我觉得还是值得分享的。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;抬刻&lt;/strong&gt; 是 Tac 的汉字音译，也表示“抬腕时刻”。最初的想法是一个简单的单词表盘，每次抬起手腕都会看见一个不同的单词卡片。&lt;/li&gt;
  &lt;li&gt;经过几次讨论，扩展为可以订阅内容的短内容表盘，依然是每次看表都会看到不同的内容。实际的内容订阅功能会有些复杂，实际开发会从单词表盘做起。&lt;/li&gt;
  &lt;li&gt;我们在手机端设计了回看功能，可以让用户回看之前看过的所有短内容。&lt;/li&gt;
  &lt;li&gt;由于跟系统本身单指四方位交互冲突，关于这个表盘的操作都是双指的，需要首次教学引导。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-tac.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Tac 表盘PRD缩略图 &lt;/center&gt;

&lt;h4 id=&quot;ticwear-的交互结构&quot;&gt;Ticwear 的交互结构&lt;/h4&gt;

&lt;p&gt;Ticwear 系统整体的交互结构是从上下左右四个方向划出不同的功能页面，这一交互形式，从3.0延续到4.0版本。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-four-directions.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 交互结构 &lt;/center&gt;

&lt;p&gt;从整体设计上看，手表交互结构，跟手机很相似，但又有一些不同。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;手机&lt;/strong&gt;，从锁屏经历一个仪式感较重的解锁环节，进入主页——应用列表，核心体验是应用程序。没有应用程序，就没有智能手机。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;手表&lt;/strong&gt;，在表盘能看到时间日期以及一些常用信息。而手表应用程序都是轻交互，轻浏览，较低频使用的应用程序，整个智能手表的体验不再从“进入一个应用程序”开始。所以应用程序的列表也就不再是系统的”主屏”了。&lt;/p&gt;

&lt;p&gt;Ticwear 交互也体现了这样的不同，应用列表跟其他几个方位划出的功能是并列关系，并没有被特殊强调。&lt;/p&gt;

&lt;p&gt;Ticwatch 只有一个物理键：在表盘界面点击，熄灭屏幕；在其他界面在其他界面点击，退出当前应用；长按，进入关机设置界面。&lt;/p&gt;

&lt;h5 id=&quot;redesign&quot;&gt;&lt;strong&gt;Redesign&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;任何一个方案都会有他的不足，Ticwear 的四个方向所代表的四个功能是完全平等的，没有轻重之分。四个方向的交互手势、动画的形式，与其所对应的功能没有任何关联，也没有视觉上的提示，用户需要完全的靠记忆去使用这些的功能，在还分不太清哪个方向对应哪个功能的时候，会产生一定的认知混乱。从这一点看，Ticwear 还是有优化空间的。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-redesign.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 交互结构 Redesign &lt;/center&gt;

&lt;p&gt;这个设计的关键点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;类似左划和右划这类最直接、最简单手势，跟当前的界面形成自然关联的交互形式会更易理解和上手，例如：手机上的应用列表翻页，表盘界面左滑右滑切换表盘。表盘是手表上最重要的界面，如果能有更多功能化的表盘，用户完全可以选择几个常用的表盘作为自己最常用的信息和功能来源，并且用最直接的交互方式进行切换。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;去掉原本的横向翻阅的快捷卡片，将原本两张快捷设置卡片合并，只保留一个快捷设置界面。将快捷卡片中的常用功能，整合进更多的表盘设计。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Android 下拉会把快捷设置和通知中心一期拉出；iOS 下拉通知中心，上划出快捷设置。所以对用户来讲，下拉出通知中心更符合用户的习惯。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;这个设计看起来跟现在的 Apple Watch OS 没什么区别，我的确是在尝试去分析这个设计的理由。其实在 Ticwear 团队内部，早在 Apple Watch 做出这样的设计之前，确实有过想更快速的切换表盘、去掉快捷卡片、改善四方位交互的想法，但当时没有形成完整的方案，也就没有被提上日程。另一方面， Ticwear 在那一时期，处于产品发布和逐渐稳定的时期，也并不适合做整体结构的较大调整。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;应用图标设计&quot;&gt;应用图标设计&lt;/h4&gt;

&lt;p&gt;这是 Ticwear 3.0 的图标设计：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-old-app-icons.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 3.0 的应用图标 &lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;整体的质感和配色，不太符合一款智能手表极客、科技、年轻的风格。&lt;/li&gt;
  &lt;li&gt;图标采用的当时比较流行的长投影。这种设计切入点，特点太过鲜明，也很有时代感，不适合作为系统级别的图标统一大量的出现。&lt;/li&gt;
  &lt;li&gt;所有图标都是圆形也显得相对比较死板，4个圆形成正方形排列，放在圆形表盘里也不是很舒服。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我加入团队后开始重新设计图标。先后尝试了几个版本图标设计。受 Smartisan OS 的影响，再加上我认为表盘的设计方向应该是更精致和拟物化的，所以开始尝试了拟物的风格的图标。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-app-icon-realism.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; 我设计的一套拟物风格应用图标 &lt;/center&gt;

&lt;p&gt;这一版创作的很艰难，完成度还不够。拟物图标更考验一个设计师的绘画能力，这点我还差的太远。每次做拟物图标都让我非常羡慕 Smartisan 设计师们的超能力。&lt;/p&gt;

&lt;p&gt;我在设计的过程中发现，拟物的图标跟 Ticwear 系统里其他的界面显得格格不入，跟其对应的每个应用内的设计也很难形成关联。识别度也不够好。&lt;/p&gt;

&lt;p&gt;下面是我设计的另一套图标。做主题图标设计，很容易会开始去找一个设计切入点，然后围绕这个点进行发散和创作，像解谜题一样，得到答案会非常开心，但让所有的系统图标都能围绕这个切入点，并且做到贴切，不牵强，还是很难的。而这样的图标还是会出现不好识别的问题，往往那个切入点元素太过鲜明时，会导致他不适合做为系统级的主题出现。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/shots/time_in_circle_2018.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; 我设计的一套抽象风格应用图标 &lt;/center&gt;

&lt;p&gt;经过了多个版本的尝试，Ticwear 4.0 最终采用了下面这套图标。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/shots/ticwatch_appicons.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 4.0 的应用图标 &lt;/center&gt;

&lt;p&gt;这一版更接近主流的设计风格，虽然相对少了一些个性，但是识别度和色彩我还是比较满意的，团队内部也比较接受这套方案。下面是我在整个图标设计过程中获得的一些经验。&lt;/p&gt;

&lt;h5 id=&quot;智能手表应用图标设计经验&quot;&gt;智能手表应用图标设计经验&lt;/h5&gt;

&lt;p&gt;对于手机来讲，应用图标是主题设计里很重要的一部分，几乎决定了整个主题的风格。智能手表上的应用图标曝光率虽然没有在手机上那么高，但也一定程度影响系统的整体气质。用户不会盯着手表太久；可能需要更快的处理任务；可能会在运动中使用等等这些特点，决定了手表的应用图标设计应该满足下面的要求：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;识别度要更好，让用户可以快速的决定和精准点击&lt;/li&gt;
  &lt;li&gt;不要有过小过细的视觉元素出现，太小的元素对整个交互流程是干扰&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;另外，在设计智能手表应用图标时，可以注意下面几点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;可以先考虑几个“表类”的图标：闹钟，秒表，计时器。这几个图标会有些相似，在做设计切入点融入的时候，会比较困难。也一定要分清楚每个都是做什么的。&lt;/li&gt;
  &lt;li&gt;视觉上我倾向于不要用完全相同的形状的图标背景，尝试着让图标接近事物本身的形态。&lt;/li&gt;
  &lt;li&gt;注意图标在实际的环境里的位置和排序。在设计的时候，可能是设计师自己随机的一个位置和排序，而实际图标可能不是在那样的矩阵中排列的，在真实的设备上也一定会有一个出厂时的默认排序。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;更多界面设计&quot;&gt;更多界面设计&lt;/h4&gt;

&lt;h5 id=&quot;设置&quot;&gt;设置&lt;/h5&gt;

&lt;p&gt;下面是 Ticwear 3.0 的设置界面。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-older-setting.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 3.0 Settings &lt;/center&gt;

&lt;p&gt;这个设计的问题比较明显：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;每个设置项的前面都有一个小图标。所有的设置项目加在一起可能有上百个，设计、维护数量庞大的并且表意不重复的小图标，是非常耗时、收益低的工作。有大量的设置项是无法通过那么小的图标精准表意的，很多小图标已经超出了用图形就能识别意思的初衷，给用户带来很大的困扰。&lt;/li&gt;
  &lt;li&gt;每一级别的设置页面，每一行设置项目之间几乎没有样式上的区别，也会让用户查找起来有些困难。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是 Ticwear 4.0 迭代后的设置界面。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-settings.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 4.0 Settings &lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;区分了一级列表和次级列表的样式，重新调整了每行的间距&lt;/li&gt;
  &lt;li&gt;去掉了大量的小图标设计，只在第一级菜单有图标。并且重绘了一级项目的图标。&lt;/li&gt;
  &lt;li&gt;优化并规范了控件的样式，并形成了统一的代码库（ &lt;a href=&quot;http://ticdesign.chumenwenwen.com/design/&quot;&gt; &lt;strong&gt;&lt;em&gt;Ticdesign&lt;/em&gt;&lt;/strong&gt; &lt;/a&gt;  ）来规范控件的使用。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;快捷设置&quot;&gt;快捷设置&lt;/h5&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-older-quick-card.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 3.0 快捷卡片 &lt;/center&gt;

&lt;p&gt;Ticwear 3.0 的快捷卡片的最前面是这样两张卡片。团的所有人每天都在使用 Ticwatch，越来越能体会到这两个卡片的带给用户的使用体验实在是毫无“快捷”可言。第一张卡片上的信息，已经更多的被新设计的表盘所取代；第二张卡片，本是应该提供方便的快速开关按钮，却被放在了“快捷卡片”的第二个位置。&lt;/p&gt;

&lt;p&gt;在4.0版本里，我们设计了下面的方案。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid my-4&quot; src=&quot;/img/article/watch-ui/watch-ui-quick-card.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 4.0 快捷卡片 &lt;/center&gt;

&lt;p&gt;经过了改版，使用体验有所提升，第一个卡片上就能看到一些快捷开关。但这里依然存在两张卡片，并且在第二张卡片里，有一些“快捷入口”依然是不快捷得，比如这里的“设置”入口，跟从应用列表到达设置需要的步骤是一样的。先向下划，再向左划，去找到第二个卡片上的一些设置项，也不符合常见的快速设置的习惯。我觉得这样的快捷设置界面还是不够完善，在整理自己过去的设计时，重新设计了这个卡片。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-quick-card-redesign.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 4.0 Quick Card Redesign &lt;/center&gt;

&lt;p&gt;在这个Redesign里，主要考虑以下几点&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;去掉了之前的只能作为“入口”的按键，避免了看起来像开关，点了却发现跳转界面的尴尬。&lt;/li&gt;
  &lt;li&gt;去掉了一些并不是很需要经常设置的项目，将快捷设置缩减为一个页面。当然，不排除真的需要更多的开关按钮的可能，我依然保留了翻页，但第二页会是跟第一页是一样的布局。&lt;/li&gt;
  &lt;li&gt;围绕圆形表盘的布局，不会存在之前割裂感比较强的分割线。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;应用列表通知中心音乐&quot;&gt;应用列表、通知中心、音乐&lt;/h5&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-3-system-ui.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 4.0 Applist / Notification Center / Music &lt;/center&gt;

&lt;h5 id=&quot;天气&quot;&gt;天气&lt;/h5&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-weather.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 4.0 Weather &lt;/center&gt;

&lt;h5 id=&quot;加载中幻灯片&quot;&gt;加载中幻灯片&lt;/h5&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-tutorial.png&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb-4&quot;&gt; Ticwear 4.0 Loading Slides &lt;/center&gt;

&lt;h4 id=&quot;我对智能手表体验设计的理解&quot;&gt;我对智能手表体验设计的理解&lt;/h4&gt;

&lt;p&gt;2015年刚加入 Ticwear 项目的时候，我很快的通过各种方式体验了Ticwatch，Apple Watch，和搭载 Android Wear 的智能手表。我把体验后的理解，整理了几页Keynote，在团队内部做了分享。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-fluid mt-4 mb-1&quot; src=&quot;/img/article/watch-ui/watch-ui-old-keynote.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里面的一些想法，有很多已经在产品上实现。有很多设计上的思考和对智能手表设计的理解，已经总结并发布在 &lt;a href=&quot;http://ticdesign.chumenwenwen.com/design/&quot;&gt;&lt;strong&gt;&lt;em&gt;Ticdesign&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; 上。&lt;/p&gt;

&lt;p&gt;我想纠正以前的一个错误理解来做为结束。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;智能手表不是必需品，不会替代手机，而是跟手机协同互补带给用户更好的体验。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;智能手表不应该去占用其他设备的使用时间，不应该存在大量、复杂的交互，不应该存在重浏览、重阅读类型的体验。同样是一块屏幕，没什么是手表小屏幕上必须做，而手机的大屏幕上不能做的。如果用户一直盯着手表看，一直在手表上划来划去，不能说产品成功了，你只是把用户引到了一个相对效率低的信息获取载体上。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;请用心去设计抬起手腕的每一个瞬间。每个用心设计的瞬间，都是让用户把他戴在手腕上的理由。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">能够参与像智能手表这样的前沿科技产品的体验设计，至今我都觉得非常的开心和幸运。在 Ticwear 项目期间，学到了很多，思考了很多，记录了很多。停下来，跳出去，整理思路，才能更好的前行。</summary></entry></feed>